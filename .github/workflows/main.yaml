name: Main

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-southeast-2
  AWS_ACCOUNT_ID: 692859929663
  AWS_IAM_ROLE: arn:aws:iam::692859929663:role/cicd-github-actions
  ECR_REGISTRY: 692859929663.dkr.ecr.ap-southeast-2.amazonaws.com
  ECR_REPOSITORY: app/student-ui
  ECR_IMAGE: 692859929663.dkr.ecr.ap-southeast-2.amazonaws.com/app/student-ui
  CONTAINER_NAME: student-ui

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps: 
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to EC2.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          docker pull ${{ env.ECR_IMAGE }}:${{ github.sha }}
      - name: Run docker container
        run: |
          docker rm -f ${{ env.CONTAINER_NAME }} || true
          docker run -d -p 3000:3000 --name ${{ env.CONTAINER_NAME }} ${{ env.ECR_IMAGE }}:${{ github.sha }}
